# Generated by Django 5.2 on 2025-04-10 20:12

import user.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("nome", models.CharField(max_length=200)),
                ("sobrenome", models.CharField(blank=True, max_length=30)),
                ("nasc", models.DateField(blank=True, null=True)),
                (
                    "sexo",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculino"), ("F", "Feminino")],
                        max_length=1,
                    ),
                ),
                (
                    "genero",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("M", "Masculino"),
                            ("F", "Feminino"),
                            ("B", "Bissexual"),
                        ],
                        max_length=1,
                    ),
                ),
                ("cidade", models.CharField(blank=True, max_length=100)),
                ("estado", models.CharField(blank=True, max_length=2)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "foto",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=user.models.upload_to,
                        validators=[user.models.size, user.models.validar_ext],
                    ),
                ),
                ("telefone", models.CharField(blank=True, max_length=15)),
                (
                    "signo",
                    models.CharField(
                        blank=True, editable=False, max_length=20, null=True
                    ),
                ),
                ("is_whatsapp", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
